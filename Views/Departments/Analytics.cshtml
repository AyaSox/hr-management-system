@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "Department Analytics";
    var companyStats = ViewBag.CompanyStats as dynamic;
}

<h1><i class="fas fa-chart-bar"></i> Department Analytics</h1>

<!-- Company Overview Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card border-primary">
            <div class="card-body text-center">
                <i class="fas fa-users fa-2x text-primary mb-2"></i>
                <h5>Total Employees</h5>
                <h3 class="text-primary">@companyStats.TotalEmployees</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-success">
            <div class="card-body text-center">
                <i class="fas fa-building fa-2x text-success mb-2"></i>
                <h5>Departments</h5>
                <h3 class="text-success">@companyStats.TotalDepartments</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-warning">
            <div class="card-body text-center">
                <i class="fas fa-money-bill-wave fa-2x text-warning mb-2"></i>
                <h5>Avg Salary</h5>
                <h3 class="text-warning">@companyStats.CompanyAverageSalary.ToString("C0")</h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-info">
            <div class="card-body text-center">
                <i class="fas fa-clock fa-2x text-info mb-2"></i>
                <h5>Avg Tenure</h5>
                <h3 class="text-info">@companyStats.CompanyAverageTenure years</h3>
            </div>
        </div>
    </div>
</div>

<!-- Department Comparison Table -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-table"></i> Department Comparison</h5>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Department</th>
                        <th>Total</th>
                        <th>Active</th>
                        <th>On Leave</th>
                        <th>Inactive</th>
                        <th>Avg Salary</th>
                        <th>Avg Tenure</th>
                        <th>Recent Hires</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var dept in Model)
                    {
                        <tr>
                            <td><strong>@dept.DepartmentName</strong></td>
                            <td><span class="badge bg-primary">@dept.TotalEmployees</span></td>
                            <td><span class="badge bg-success">@dept.ActiveEmployees</span></td>
                            <td><span class="badge bg-warning">@dept.OnLeaveEmployees</span></td>
                            <td><span class="badge bg-danger">@dept.InactiveEmployees</span></td>
                            <td>@dept.AverageSalary.ToString("C0")</td>
                            <td>@dept.AverageTenure years</td>
                            <td>
                                @if (dept.RecentHires > 0)
                                {
                                    <span class="badge bg-info">@dept.RecentHires</span>
                                }
                                else
                                {
                                    <span class="text-muted">0</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="row mb-4">
    <!-- Headcount Chart -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0"><i class="fas fa-users"></i> Department Headcount</h6>
            </div>
            <div class="card-body">
                <canvas id="headcountChart" width="400" height="300"></canvas>
            </div>
        </div>
    </div>
    
    <!-- Salary Distribution Chart -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0"><i class="fas fa-money-bill-wave"></i> Average Salary by Department</h6>
            </div>
            <div class="card-body">
                <canvas id="salaryChart" width="400" height="300"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Status Distribution -->
<div class="row mb-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0"><i class="fas fa-pie-chart"></i> Employee Status Distribution</h6>
            </div>
            <div class="card-body">
                <canvas id="statusChart" width="400" height="300"></canvas>
            </div>
        </div>
    </div>
    
    <!-- Employment Type Distribution -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0"><i class="fas fa-briefcase"></i> Employment Type Distribution</h6>
            </div>
            <div class="card-body">
                <canvas id="employmentTypeChart" width="400" height="300"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Detailed Department Cards -->
<div class="row">
    @foreach (var dept in Model)
    {
        <div class="col-md-6 mb-4">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-building"></i> @dept.DepartmentName</h6>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6">
                            <h6>Headcount</h6>
                            <h4 class="text-primary">@dept.TotalEmployees</h4>
                        </div>
                        <div class="col-6">
                            <h6>Avg Salary</h6>
                            <h4 class="text-success">@dept.AverageSalary.ToString("C0")</h4>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-6">
                            <small class="text-muted">Highest Salary:</small><br>
                            <strong>@dept.HighestSalary.ToString("C0")</strong>
                        </div>
                        <div class="col-6">
                            <small class="text-muted">Lowest Salary:</small><br>
                            <strong>@dept.LowestSalary.ToString("C0")</strong>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-4 text-center">
                            <small class="text-muted">Permanent</small><br>
                            <span class="badge bg-primary">@dept.PermanentEmployees</span>
                        </div>
                        <div class="col-4 text-center">
                            <small class="text-muted">Contract</small><br>
                            <span class="badge bg-warning">@dept.ContractEmployees</span>
                        </div>
                        <div class="col-4 text-center">
                            <small class="text-muted">Temporary</small><br>
                            <span class="badge bg-info">@dept.TemporaryEmployees</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-list"></i> Back to Departments
    </a>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Prepare data
        const departments = @Html.Raw(Json.Serialize(Model.Select(d => d.DepartmentName)));
        const headcounts = @Html.Raw(Json.Serialize(Model.Select(d => d.TotalEmployees)));
        const salaries = @Html.Raw(Json.Serialize(Model.Select(d => d.AverageSalary)));
        const activeTotal = @Html.Raw(Json.Serialize(Model.Sum(d => d.ActiveEmployees)));
        const onLeaveTotal = @Html.Raw(Json.Serialize(Model.Sum(d => d.OnLeaveEmployees)));
        const inactiveTotal = @Html.Raw(Json.Serialize(Model.Sum(d => d.InactiveEmployees)));
        const permanentTotal = @Html.Raw(Json.Serialize(Model.Sum(d => d.PermanentEmployees)));
        const contractTotal = @Html.Raw(Json.Serialize(Model.Sum(d => d.ContractEmployees)));
        const temporaryTotal = @Html.Raw(Json.Serialize(Model.Sum(d => d.TemporaryEmployees)));

        // Headcount Chart
        new Chart(document.getElementById('headcountChart'), {
            type: 'bar',
            data: {
                labels: departments,
                datasets: [{
                    label: 'Employees',
                    data: headcounts,
                    backgroundColor: 'rgba(54, 162, 235, 0.8)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: {
                    y: { beginAtZero: true, ticks: { stepSize: 1 } }
                }
            }
        });

        // Salary Chart
        new Chart(document.getElementById('salaryChart'), {
            type: 'bar',
            data: {
                labels: departments,
                datasets: [{
                    label: 'Average Salary',
                    data: salaries,
                    backgroundColor: 'rgba(75, 192, 192, 0.8)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: {
                    y: { 
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return 'R' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        // Status Distribution Chart
        new Chart(document.getElementById('statusChart'), {
            type: 'doughnut',
            data: {
                labels: ['Active', 'On Leave', 'Inactive'],
                datasets: [{
                    data: [activeTotal, onLeaveTotal, inactiveTotal],
                    backgroundColor: ['#28a745', '#ffc107', '#dc3545']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'bottom' }
                }
            }
        });

        // Employment Type Chart
        new Chart(document.getElementById('employmentTypeChart'), {
            type: 'pie',
            data: {
                labels: ['Permanent', 'Contract', 'Temporary'],
                datasets: [{
                    data: [permanentTotal, contractTotal, temporaryTotal],
                    backgroundColor: ['#007bff', '#ffc107', '#17a2b8']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'bottom' }
                }
            }
        });
    </script>
}

<style>
    .fas {
        font-family: "Font Awesome 5 Free";
        font-weight: 900;
    }
    .card {
        transition: transform 0.2s;
    }
    .card:hover {
        transform: translateY(-2px);
    }
</style>